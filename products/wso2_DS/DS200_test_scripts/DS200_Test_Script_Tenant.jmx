<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.6" jmeter="2.11 r1554548">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="DS200 Test Suite for Tenant Domains" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
      </CacheManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="username" elementType="Argument">
            <stringProp name="Argument.name">username</stringProp>
            <stringProp name="Argument.value">peter@abc.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">username with tenant domain eg: dilini@wso2.com</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">peter123</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="domain" elementType="Argument">
            <stringProp name="Argument.name">domain</stringProp>
            <stringProp name="Argument.value">abc.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dashboard" elementType="Argument">
            <stringProp name="Argument.name">dashboard</stringProp>
            <stringProp name="Argument.value">TenantDashboard</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="description" elementType="Argument">
            <stringProp name="Argument.name">description</stringProp>
            <stringProp name="Argument.value">This is the default description</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="hostname" elementType="Argument">
            <stringProp name="Argument.name">hostname</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">9443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">localhost</stringProp>
        <stringProp name="HTTPSampler.port">9443</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">20</stringProp>
        <longProp name="ThreadGroup.start_time">1363247040000</longProp>
        <longProp name="ThreadGroup.end_time">1363247040000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="AnonymousTest" enabled="true"/>
        <hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">7878</stringProp>
            <stringProp name="CounterConfig.end">10000000</stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">id</stringProp>
            <stringProp name="CounterConfig.format">#</stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="destination" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">destination</stringProp>
                  <stringProp name="Argument.value">/portal/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">${password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">${username}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/login-controller?destination=%2Fportal%2F</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">3901.6000000000004</stringProp>
              <stringProp name="ConstantTimer.delay">7803.200000000001</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/login-controller?destination=%2Fportal%2F</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">1061.6000000000001</stringProp>
              <stringProp name="ConstantTimer.delay">2123.2000000000003</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/apis/assets?type=dashboard&amp;domain=${domain}&amp;start=0&amp;count=10" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/apis/assets?type=dashboard&amp;domain=${domain}&amp;start=0&amp;count=10</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json,text/javascript,*/*;q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">171.60000000000002</stringProp>
              <stringProp name="ConstantTimer.delay">343.20000000000005</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/t/${domain}/create-dashboard" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/t/${domain}/create-dashboard</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">686.8000000000001</stringProp>
              <stringProp name="ConstantTimer.delay">1373.6000000000001</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/t/${domain}/apis/dashboards/${dashboard}${id}" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="description" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">description</stringProp>
                  <stringProp name="Argument.value">${description}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">${dashboard}${id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="title" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">title</stringProp>
                  <stringProp name="Argument.value">${dashboard}${id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/t/${domain}/dashboards/${dashboard}${id}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/create-dashboard</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">24.0</stringProp>
              <stringProp name="ConstantTimer.delay">48.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/t/${domain}/dashboards/test?editor=true" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/t/${domain}/dashboards/${dashboard}${id}?editor=true</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/create-dashboard</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">16.400000000000002</stringProp>
              <stringProp name="ConstantTimer.delay">32.800000000000004</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/apis/assets?type=layout&amp;domain=${domain}&amp;start=0&amp;count=20" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/apis/assets?type=layout&amp;domain=${domain}&amp;start=0&amp;count=20</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json,text/javascript,*/*;q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">245.60000000000002</stringProp>
              <stringProp name="ConstantTimer.delay">491.20000000000005</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/apis/assets?type=gadget&amp;domain=${domain}&amp;start=0&amp;count=20" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/apis/assets?type=gadget&amp;domain=${domain}&amp;start=0&amp;count=20</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json,text/javascript,*/*;q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/store/${domain}/layout/right-grid/index.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/store/${domain}/layout/right-grid/index.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,*/*;q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">1512.4</stringProp>
              <stringProp name="ConstantTimer.delay">3024.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/t/${domain}/apis/dashboards/${dashboard}${id}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:&quot;${dashboard}${id}&quot;,&quot;title&quot;:&quot;${dashboard}${id}&quot;,&quot;description&quot;:&quot;testdescription&quot;,&quot;permissions&quot;:{&quot;viewers&quot;:[&quot;Internal/everyone&quot;],&quot;editors&quot;:[&quot;Internal/everyone&quot;]},&quot;pages&quot;:[{&quot;id&quot;:&quot;landing&quot;,&quot;title&quot;:&quot;Home&quot;,&quot;layout&quot;:{&quot;content&quot;:{&quot;loggedIn&quot;:{&quot;blocks&quot;:[{&quot;id&quot;:&quot;a&quot;,&quot;x&quot;:0,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;b&quot;,&quot;x&quot;:4,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;c&quot;,&quot;x&quot;:8,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;d&quot;,&quot;x&quot;:0,&quot;y&quot;:3,&quot;width&quot;:8,&quot;height&quot;:3},{&quot;id&quot;:&quot;e&quot;,&quot;x&quot;:8,&quot;y&quot;:3,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;f&quot;,&quot;x&quot;:0,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;g&quot;,&quot;x&quot;:4,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;h&quot;,&quot;x&quot;:8,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3}]}},&quot;fluidLayout&quot;:false},&quot;isanon&quot;:false,&quot;content&quot;:{&quot;default&quot;:{},&quot;anon&quot;:{}}}],&quot;identityServerUrl&quot;:&quot;&quot;,&quot;accessTokenUrl&quot;:&quot;&quot;,&quot;apiKey&quot;:&quot;&quot;,&quot;apiSecret&quot;:&quot;&quot;,&quot;theme&quot;:&quot;&quot;,&quot;isUserCustom&quot;:false,&quot;isEditorEnable&quot;:true,&quot;banner&quot;:{&quot;globalBannerExists&quot;:false,&quot;customBannerExists&quot;:false},&quot;landing&quot;:&quot;landing&quot;,&quot;isanon&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/t/${domain}/apis/dashboards/${dashboard}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">20.0</stringProp>
              <stringProp name="ConstantTimer.delay">40.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://${hostname}:${port}/portal/store/${domain}/gadget/usa-map/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">3139.2000000000003</stringProp>
              <stringProp name="ConstantTimer.delay">6278.400000000001</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/t/${domain}/apis/dashboards/${dashboard}${id}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:&quot;${dashboard}${id}&quot;,&quot;title&quot;:&quot;${dashboard}${id}&quot;,&quot;description&quot;:&quot;testdescription&quot;,&quot;permissions&quot;:{&quot;viewers&quot;:[&quot;Internal/everyone&quot;],&quot;editors&quot;:[&quot;Internal/everyone&quot;]},&quot;pages&quot;:[{&quot;id&quot;:&quot;landing&quot;,&quot;title&quot;:&quot;Home&quot;,&quot;layout&quot;:{&quot;content&quot;:{&quot;loggedIn&quot;:{&quot;blocks&quot;:[{&quot;id&quot;:&quot;a&quot;,&quot;x&quot;:0,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;b&quot;,&quot;x&quot;:4,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;c&quot;,&quot;x&quot;:8,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;d&quot;,&quot;x&quot;:0,&quot;y&quot;:3,&quot;width&quot;:8,&quot;height&quot;:3},{&quot;id&quot;:&quot;e&quot;,&quot;x&quot;:8,&quot;y&quot;:3,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;f&quot;,&quot;x&quot;:0,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;g&quot;,&quot;x&quot;:4,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;h&quot;,&quot;x&quot;:8,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3}]}},&quot;fluidLayout&quot;:false},&quot;isanon&quot;:false,&quot;content&quot;:{&quot;default&quot;:{&quot;a&quot;:[{&quot;id&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-map&quot;,&quot;title&quot;:&quot;USAMap&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-map/index.png&quot;,&quot;settings&quot;:{&quot;personalize&quot;:true},&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-map/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewandselectUSstates&quot;,&quot;notify&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;},&quot;cancel&quot;:{&quot;type&quot;:&quot;boolean&quot;,&quot;description&quot;:&quot;Thisnotifiescancellationofstateselection&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;USAMap&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}},&quot;hasCustomUserPrefView&quot;:true,&quot;hasCustomFullView&quot;:true}]},&quot;anon&quot;:{}}}],&quot;identityServerUrl&quot;:&quot;&quot;,&quot;accessTokenUrl&quot;:&quot;&quot;,&quot;apiKey&quot;:&quot;&quot;,&quot;apiSecret&quot;:&quot;&quot;,&quot;theme&quot;:&quot;&quot;,&quot;isUserCustom&quot;:false,&quot;isEditorEnable&quot;:true,&quot;banner&quot;:{&quot;globalBannerExists&quot;:false,&quot;customBannerExists&quot;:false},&quot;landing&quot;:&quot;landing&quot;,&quot;isanon&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/t/${domain}/apis/dashboards/${dashboard}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">76.4</stringProp>
              <stringProp name="ConstantTimer.delay">152.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://${hostname}:${port}/portal/store/${domain}/gadget/usa-business-revenue/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">2339.2000000000003</stringProp>
              <stringProp name="ConstantTimer.delay">4678.400000000001</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/t/${domain}/apis/dashboards/${dashboard}${id}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:&quot;${dashboard}${id}&quot;,&quot;title&quot;:&quot;${dashboard}${id}&quot;,&quot;description&quot;:&quot;testdescription&quot;,&quot;permissions&quot;:{&quot;viewers&quot;:[&quot;Internal/everyone&quot;],&quot;editors&quot;:[&quot;Internal/everyone&quot;]},&quot;pages&quot;:[{&quot;id&quot;:&quot;landing&quot;,&quot;title&quot;:&quot;Home&quot;,&quot;layout&quot;:{&quot;content&quot;:{&quot;loggedIn&quot;:{&quot;blocks&quot;:[{&quot;id&quot;:&quot;a&quot;,&quot;x&quot;:0,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;b&quot;,&quot;x&quot;:4,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;c&quot;,&quot;x&quot;:8,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;d&quot;,&quot;x&quot;:0,&quot;y&quot;:3,&quot;width&quot;:8,&quot;height&quot;:3},{&quot;id&quot;:&quot;e&quot;,&quot;x&quot;:8,&quot;y&quot;:3,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;f&quot;,&quot;x&quot;:0,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;g&quot;,&quot;x&quot;:4,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;h&quot;,&quot;x&quot;:8,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3}]}},&quot;fluidLayout&quot;:false},&quot;isanon&quot;:false,&quot;content&quot;:{&quot;default&quot;:{&quot;a&quot;:[{&quot;id&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-map&quot;,&quot;title&quot;:&quot;USAMap&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-map/index.png&quot;,&quot;settings&quot;:{&quot;personalize&quot;:true},&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-map/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewandselectUSstates&quot;,&quot;notify&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;},&quot;cancel&quot;:{&quot;type&quot;:&quot;boolean&quot;,&quot;description&quot;:&quot;Thisnotifiescancellationofstateselection&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;USAMap&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}},&quot;hasCustomUserPrefView&quot;:true,&quot;hasCustomFullView&quot;:true}],&quot;b&quot;:[{&quot;id&quot;:&quot;8k7lqtf6vulhm2t9&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-business-revenue&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-business-revenue/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewrevenuebycompaniesinUS&quot;,&quot;listen&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Usedtofilterbasedonstate&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;USABusinessRevenue&quot;,&quot;borders&quot;:true},&quot;options&quot;:{&quot;gadget-status&quot;:{&quot;type&quot;:&quot;HIDDEN&quot;,&quot;title&quot;:&quot;gadget-status&quot;,&quot;value&quot;:&quot;not-wired&quot;,&quot;options&quot;:[],&quot;required&quot;:false}},&quot;locale_titles&quot;:{}}}]},&quot;anon&quot;:{}}}],&quot;identityServerUrl&quot;:&quot;&quot;,&quot;accessTokenUrl&quot;:&quot;&quot;,&quot;apiKey&quot;:&quot;&quot;,&quot;apiSecret&quot;:&quot;&quot;,&quot;theme&quot;:&quot;&quot;,&quot;isUserCustom&quot;:false,&quot;isEditorEnable&quot;:true,&quot;banner&quot;:{&quot;globalBannerExists&quot;:false,&quot;customBannerExists&quot;:false},&quot;landing&quot;:&quot;landing&quot;,&quot;isanon&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/t/${domain}/apis/dashboards/${dashboard}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">35.6</stringProp>
              <stringProp name="ConstantTimer.delay">71.2</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/t/${domain}/apis/dashboards/${dashboard}${id}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:&quot;${dashboard}${id}&quot;,&quot;title&quot;:&quot;${dashboard}${id}&quot;,&quot;description&quot;:&quot;testdescription&quot;,&quot;permissions&quot;:{&quot;viewers&quot;:[&quot;Internal/everyone&quot;],&quot;editors&quot;:[&quot;Internal/everyone&quot;]},&quot;pages&quot;:[{&quot;id&quot;:&quot;landing&quot;,&quot;title&quot;:&quot;Home&quot;,&quot;layout&quot;:{&quot;content&quot;:{&quot;loggedIn&quot;:{&quot;blocks&quot;:[{&quot;id&quot;:&quot;a&quot;,&quot;x&quot;:0,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;b&quot;,&quot;x&quot;:4,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;c&quot;,&quot;x&quot;:8,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;d&quot;,&quot;x&quot;:0,&quot;y&quot;:3,&quot;width&quot;:8,&quot;height&quot;:3},{&quot;id&quot;:&quot;e&quot;,&quot;x&quot;:8,&quot;y&quot;:3,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;f&quot;,&quot;x&quot;:0,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;g&quot;,&quot;x&quot;:4,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;h&quot;,&quot;x&quot;:8,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3}]}},&quot;fluidLayout&quot;:false},&quot;isanon&quot;:false,&quot;content&quot;:{&quot;default&quot;:{&quot;a&quot;:[{&quot;id&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-map&quot;,&quot;title&quot;:&quot;USAMap&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-map/index.png&quot;,&quot;settings&quot;:{&quot;personalize&quot;:true},&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-map/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewandselectUSstates&quot;,&quot;notify&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;},&quot;cancel&quot;:{&quot;type&quot;:&quot;boolean&quot;,&quot;description&quot;:&quot;Thisnotifiescancellationofstateselection&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;USAMap&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}},&quot;hasCustomUserPrefView&quot;:true,&quot;hasCustomFullView&quot;:true}],&quot;b&quot;:[{&quot;id&quot;:&quot;8k7lqtf6vulhm2t9&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-business-revenue&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-business-revenue/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewrevenuebycompaniesinUS&quot;,&quot;listen&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Usedtofilterbasedonstate&quot;,&quot;on&quot;:[{&quot;from&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;event&quot;:&quot;state&quot;}]}},&quot;styles&quot;:{&quot;no_heading&quot;:false,&quot;titlePosition&quot;:&quot;left&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;},&quot;options&quot;:{&quot;gadget-status&quot;:{&quot;type&quot;:&quot;HIDDEN&quot;,&quot;title&quot;:&quot;gadget-status&quot;,&quot;value&quot;:&quot;not-wired&quot;,&quot;options&quot;:[],&quot;required&quot;:false}},&quot;locale_titles&quot;:{&quot;en-US&quot;:&quot;USABusinessRevenue&quot;},&quot;settings&quot;:{}}}]},&quot;anon&quot;:{}}}],&quot;identityServerUrl&quot;:&quot;&quot;,&quot;accessTokenUrl&quot;:&quot;&quot;,&quot;apiKey&quot;:&quot;&quot;,&quot;apiSecret&quot;:&quot;&quot;,&quot;theme&quot;:&quot;&quot;,&quot;isUserCustom&quot;:false,&quot;isEditorEnable&quot;:true,&quot;banner&quot;:{&quot;globalBannerExists&quot;:false,&quot;customBannerExists&quot;:false},&quot;landing&quot;:&quot;landing&quot;,&quot;isanon&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/t/${domain}/apis/dashboards/${dashboard}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">1410.8000000000002</stringProp>
              <stringProp name="ConstantTimer.delay">2821.6000000000004</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/t/${domain}/apis/dashboards/${dashboard}${id}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:&quot;${dashboard}${id}&quot;,&quot;title&quot;:&quot;${dashboard}${id}&quot;,&quot;description&quot;:&quot;testdescription&quot;,&quot;permissions&quot;:{&quot;viewers&quot;:[&quot;Internal/everyone&quot;],&quot;editors&quot;:[&quot;Internal/everyone&quot;]},&quot;pages&quot;:[{&quot;id&quot;:&quot;landing&quot;,&quot;title&quot;:&quot;Home&quot;,&quot;layout&quot;:{&quot;content&quot;:{&quot;loggedIn&quot;:{&quot;blocks&quot;:[{&quot;id&quot;:&quot;a&quot;,&quot;x&quot;:0,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;b&quot;,&quot;x&quot;:4,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;c&quot;,&quot;x&quot;:8,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;d&quot;,&quot;x&quot;:0,&quot;y&quot;:3,&quot;width&quot;:8,&quot;height&quot;:3},{&quot;id&quot;:&quot;e&quot;,&quot;x&quot;:8,&quot;y&quot;:3,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;f&quot;,&quot;x&quot;:0,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;g&quot;,&quot;x&quot;:4,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;h&quot;,&quot;x&quot;:8,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3}]}},&quot;fluidLayout&quot;:false},&quot;isanon&quot;:false,&quot;content&quot;:{&quot;default&quot;:{&quot;a&quot;:[{&quot;id&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-map&quot;,&quot;title&quot;:&quot;USAMap&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-map/index.png&quot;,&quot;settings&quot;:{&quot;personalize&quot;:true},&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-map/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewandselectUSstates&quot;,&quot;notify&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;},&quot;cancel&quot;:{&quot;type&quot;:&quot;boolean&quot;,&quot;description&quot;:&quot;Thisnotifiescancellationofstateselection&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;USAMap&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}},&quot;hasCustomUserPrefView&quot;:true,&quot;hasCustomFullView&quot;:true}],&quot;b&quot;:[{&quot;id&quot;:&quot;8k7lqtf6vulhm2t9&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-business-revenue&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-business-revenue/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewrevenuebycompaniesinUS&quot;,&quot;listen&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Usedtofilterbasedonstate&quot;,&quot;on&quot;:[{&quot;from&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;event&quot;:&quot;state&quot;}]}},&quot;styles&quot;:{&quot;no_heading&quot;:false,&quot;titlePosition&quot;:&quot;left&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;},&quot;options&quot;:{&quot;gadget-status&quot;:{&quot;type&quot;:&quot;HIDDEN&quot;,&quot;title&quot;:&quot;gadget-status&quot;,&quot;value&quot;:&quot;not-wired&quot;,&quot;options&quot;:[],&quot;required&quot;:false}},&quot;locale_titles&quot;:{&quot;en-US&quot;:&quot;USABusinessRevenue&quot;},&quot;settings&quot;:{}}}]},&quot;anon&quot;:{}}}],&quot;identityServerUrl&quot;:&quot;&quot;,&quot;accessTokenUrl&quot;:&quot;&quot;,&quot;apiKey&quot;:&quot;&quot;,&quot;apiSecret&quot;:&quot;&quot;,&quot;theme&quot;:&quot;&quot;,&quot;isUserCustom&quot;:false,&quot;isEditorEnable&quot;:true,&quot;banner&quot;:{&quot;globalBannerExists&quot;:false,&quot;customBannerExists&quot;:false},&quot;landing&quot;:&quot;landing&quot;,&quot;isanon&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/t/${domain}/apis/dashboards/${dashboard}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">12.4</stringProp>
              <stringProp name="ConstantTimer.delay">24.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://${hostname}:${port}/portal/store/${domain}/gadget/date-range-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">1984.8000000000002</stringProp>
              <stringProp name="ConstantTimer.delay">3969.6000000000004</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/t/${domain}/apis/dashboards/${dashboard}${id}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:&quot;${dashboard}${id}&quot;,&quot;title&quot;:&quot;${dashboard}${id}&quot;,&quot;description&quot;:&quot;testdescription&quot;,&quot;permissions&quot;:{&quot;viewers&quot;:[&quot;Internal/everyone&quot;],&quot;editors&quot;:[&quot;Internal/everyone&quot;]},&quot;pages&quot;:[{&quot;id&quot;:&quot;landing&quot;,&quot;title&quot;:&quot;Home&quot;,&quot;layout&quot;:{&quot;content&quot;:{&quot;loggedIn&quot;:{&quot;blocks&quot;:[{&quot;id&quot;:&quot;a&quot;,&quot;x&quot;:0,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;b&quot;,&quot;x&quot;:4,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;c&quot;,&quot;x&quot;:8,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;d&quot;,&quot;x&quot;:0,&quot;y&quot;:3,&quot;width&quot;:8,&quot;height&quot;:3},{&quot;id&quot;:&quot;e&quot;,&quot;x&quot;:8,&quot;y&quot;:3,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;f&quot;,&quot;x&quot;:0,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;g&quot;,&quot;x&quot;:4,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;h&quot;,&quot;x&quot;:8,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3}]}},&quot;fluidLayout&quot;:false},&quot;isanon&quot;:false,&quot;content&quot;:{&quot;default&quot;:{&quot;a&quot;:[{&quot;id&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-map&quot;,&quot;title&quot;:&quot;USAMap&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-map/index.png&quot;,&quot;settings&quot;:{&quot;personalize&quot;:true},&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-map/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewandselectUSstates&quot;,&quot;notify&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;},&quot;cancel&quot;:{&quot;type&quot;:&quot;boolean&quot;,&quot;description&quot;:&quot;Thisnotifiescancellationofstateselection&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;USAMap&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}},&quot;hasCustomUserPrefView&quot;:true,&quot;hasCustomFullView&quot;:true}],&quot;b&quot;:[{&quot;id&quot;:&quot;8k7lqtf6vulhm2t9&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-business-revenue&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-business-revenue/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewrevenuebycompaniesinUS&quot;,&quot;listen&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Usedtofilterbasedonstate&quot;,&quot;on&quot;:[{&quot;from&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;event&quot;:&quot;state&quot;}]}},&quot;styles&quot;:{&quot;no_heading&quot;:false,&quot;titlePosition&quot;:&quot;left&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;},&quot;options&quot;:{&quot;gadget-status&quot;:{&quot;type&quot;:&quot;HIDDEN&quot;,&quot;title&quot;:&quot;gadget-status&quot;,&quot;value&quot;:&quot;not-wired&quot;,&quot;options&quot;:[],&quot;required&quot;:false}},&quot;locale_titles&quot;:{&quot;en-US&quot;:&quot;USABusinessRevenue&quot;},&quot;settings&quot;:{}}}],&quot;c&quot;:[{&quot;id&quot;:&quot;0y2wiaxjh908jjor&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;date-range-picker&quot;,&quot;title&quot;:&quot;DateRangePicker&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;store://gadget/date-range-picker/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/date-range-picker/index.xml&quot;},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;DateRangePicker&quot;},&quot;notify&quot;:{&quot;range-selected&quot;:{&quot;type&quot;:&quot;date-range&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;}},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}]},&quot;anon&quot;:{}}}],&quot;identityServerUrl&quot;:&quot;&quot;,&quot;accessTokenUrl&quot;:&quot;&quot;,&quot;apiKey&quot;:&quot;&quot;,&quot;apiSecret&quot;:&quot;&quot;,&quot;theme&quot;:&quot;&quot;,&quot;isUserCustom&quot;:false,&quot;isEditorEnable&quot;:true,&quot;banner&quot;:{&quot;globalBannerExists&quot;:false,&quot;customBannerExists&quot;:false},&quot;landing&quot;:&quot;landing&quot;,&quot;isanon&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/t/${domain}/apis/dashboards/${dashboard}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">41.2</stringProp>
              <stringProp name="ConstantTimer.delay">82.4</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://${hostname}:${port}/portal/store/${domain}/gadget/publisher/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">2982.0</stringProp>
              <stringProp name="ConstantTimer.delay">5964.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/t/${domain}/apis/dashboards/${dashboard}${id}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:&quot;${dashboard}${id}&quot;,&quot;title&quot;:&quot;${dashboard}${id}&quot;,&quot;description&quot;:&quot;testdescription&quot;,&quot;permissions&quot;:{&quot;viewers&quot;:[&quot;Internal/everyone&quot;],&quot;editors&quot;:[&quot;Internal/everyone&quot;]},&quot;pages&quot;:[{&quot;id&quot;:&quot;landing&quot;,&quot;title&quot;:&quot;Home&quot;,&quot;layout&quot;:{&quot;content&quot;:{&quot;loggedIn&quot;:{&quot;blocks&quot;:[{&quot;id&quot;:&quot;a&quot;,&quot;x&quot;:0,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;b&quot;,&quot;x&quot;:4,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;c&quot;,&quot;x&quot;:8,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;d&quot;,&quot;x&quot;:0,&quot;y&quot;:3,&quot;width&quot;:8,&quot;height&quot;:3},{&quot;id&quot;:&quot;e&quot;,&quot;x&quot;:8,&quot;y&quot;:3,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;f&quot;,&quot;x&quot;:0,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;g&quot;,&quot;x&quot;:4,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;h&quot;,&quot;x&quot;:8,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3}]}},&quot;fluidLayout&quot;:false},&quot;isanon&quot;:false,&quot;content&quot;:{&quot;default&quot;:{&quot;a&quot;:[{&quot;id&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-map&quot;,&quot;title&quot;:&quot;USAMap&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-map/index.png&quot;,&quot;settings&quot;:{&quot;personalize&quot;:true},&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-map/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewandselectUSstates&quot;,&quot;notify&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;},&quot;cancel&quot;:{&quot;type&quot;:&quot;boolean&quot;,&quot;description&quot;:&quot;Thisnotifiescancellationofstateselection&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;USAMap&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}},&quot;hasCustomUserPrefView&quot;:true,&quot;hasCustomFullView&quot;:true}],&quot;b&quot;:[{&quot;id&quot;:&quot;8k7lqtf6vulhm2t9&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-business-revenue&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-business-revenue/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewrevenuebycompaniesinUS&quot;,&quot;listen&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Usedtofilterbasedonstate&quot;,&quot;on&quot;:[{&quot;from&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;event&quot;:&quot;state&quot;}]}},&quot;styles&quot;:{&quot;no_heading&quot;:false,&quot;titlePosition&quot;:&quot;left&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;},&quot;options&quot;:{&quot;gadget-status&quot;:{&quot;type&quot;:&quot;HIDDEN&quot;,&quot;title&quot;:&quot;gadget-status&quot;,&quot;value&quot;:&quot;not-wired&quot;,&quot;options&quot;:[],&quot;required&quot;:false}},&quot;locale_titles&quot;:{&quot;en-US&quot;:&quot;USABusinessRevenue&quot;},&quot;settings&quot;:{}}}],&quot;c&quot;:[{&quot;id&quot;:&quot;0y2wiaxjh908jjor&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;date-range-picker&quot;,&quot;title&quot;:&quot;DateRangePicker&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;store://gadget/date-range-picker/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/date-range-picker/index.xml&quot;},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;DateRangePicker&quot;},&quot;notify&quot;:{&quot;range-selected&quot;:{&quot;type&quot;:&quot;date-range&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;}},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}],&quot;d&quot;:[{&quot;id&quot;:&quot;bt8gwa9q0u1eb3xr&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;publisher&quot;,&quot;title&quot;:&quot;Publisher&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;category&quot;:&quot;Publishers&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/publisher/index.xml&quot;},&quot;notify&quot;:{&quot;publisher&quot;:{&quot;type&quot;:&quot;message&quot;,&quot;description&quot;:&quot;Thisnotifiesmessagegeneratedinpublisher&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;Publisher&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}]},&quot;anon&quot;:{}}}],&quot;identityServerUrl&quot;:&quot;&quot;,&quot;accessTokenUrl&quot;:&quot;&quot;,&quot;apiKey&quot;:&quot;&quot;,&quot;apiSecret&quot;:&quot;&quot;,&quot;theme&quot;:&quot;&quot;,&quot;isUserCustom&quot;:false,&quot;isEditorEnable&quot;:true,&quot;banner&quot;:{&quot;globalBannerExists&quot;:false,&quot;customBannerExists&quot;:false},&quot;landing&quot;:&quot;landing&quot;,&quot;isanon&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/t/${domain}/apis/dashboards/${dashboard}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">32.4</stringProp>
              <stringProp name="ConstantTimer.delay">64.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://${hostname}:${port}/portal/store/${domain}/gadget/subscriber/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">1340.4</stringProp>
              <stringProp name="ConstantTimer.delay">2680.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/t/${domain}/apis/dashboards/${dashboard}${id}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:&quot;${dashboard}${id}&quot;,&quot;title&quot;:&quot;${dashboard}${id}&quot;,&quot;description&quot;:&quot;testdescription&quot;,&quot;permissions&quot;:{&quot;viewers&quot;:[&quot;Internal/everyone&quot;],&quot;editors&quot;:[&quot;Internal/everyone&quot;]},&quot;pages&quot;:[{&quot;id&quot;:&quot;landing&quot;,&quot;title&quot;:&quot;Home&quot;,&quot;layout&quot;:{&quot;content&quot;:{&quot;loggedIn&quot;:{&quot;blocks&quot;:[{&quot;id&quot;:&quot;a&quot;,&quot;x&quot;:0,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;b&quot;,&quot;x&quot;:4,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;c&quot;,&quot;x&quot;:8,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;d&quot;,&quot;x&quot;:0,&quot;y&quot;:3,&quot;width&quot;:8,&quot;height&quot;:3},{&quot;id&quot;:&quot;e&quot;,&quot;x&quot;:8,&quot;y&quot;:3,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;f&quot;,&quot;x&quot;:0,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;g&quot;,&quot;x&quot;:4,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;h&quot;,&quot;x&quot;:8,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3}]}},&quot;fluidLayout&quot;:false},&quot;isanon&quot;:false,&quot;content&quot;:{&quot;default&quot;:{&quot;a&quot;:[{&quot;id&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-map&quot;,&quot;title&quot;:&quot;USAMap&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-map/index.png&quot;,&quot;settings&quot;:{&quot;personalize&quot;:true},&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-map/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewandselectUSstates&quot;,&quot;notify&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;},&quot;cancel&quot;:{&quot;type&quot;:&quot;boolean&quot;,&quot;description&quot;:&quot;Thisnotifiescancellationofstateselection&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;USAMap&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}},&quot;hasCustomUserPrefView&quot;:true,&quot;hasCustomFullView&quot;:true}],&quot;b&quot;:[{&quot;id&quot;:&quot;8k7lqtf6vulhm2t9&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-business-revenue&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-business-revenue/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewrevenuebycompaniesinUS&quot;,&quot;listen&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Usedtofilterbasedonstate&quot;,&quot;on&quot;:[{&quot;from&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;event&quot;:&quot;state&quot;}]}},&quot;styles&quot;:{&quot;no_heading&quot;:false,&quot;titlePosition&quot;:&quot;left&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;},&quot;options&quot;:{&quot;gadget-status&quot;:{&quot;type&quot;:&quot;HIDDEN&quot;,&quot;title&quot;:&quot;gadget-status&quot;,&quot;value&quot;:&quot;not-wired&quot;,&quot;options&quot;:[],&quot;required&quot;:false}},&quot;locale_titles&quot;:{&quot;en-US&quot;:&quot;USABusinessRevenue&quot;},&quot;settings&quot;:{}}}],&quot;c&quot;:[{&quot;id&quot;:&quot;0y2wiaxjh908jjor&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;date-range-picker&quot;,&quot;title&quot;:&quot;DateRangePicker&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;store://gadget/date-range-picker/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/date-range-picker/index.xml&quot;},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;DateRangePicker&quot;},&quot;notify&quot;:{&quot;range-selected&quot;:{&quot;type&quot;:&quot;date-range&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;}},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}],&quot;d&quot;:[{&quot;id&quot;:&quot;bt8gwa9q0u1eb3xr&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;publisher&quot;,&quot;title&quot;:&quot;Publisher&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;category&quot;:&quot;Publishers&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/publisher/index.xml&quot;},&quot;notify&quot;:{&quot;publisher&quot;:{&quot;type&quot;:&quot;message&quot;,&quot;description&quot;:&quot;Thisnotifiesmessagegeneratedinpublisher&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;Publisher&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}],&quot;e&quot;:[{&quot;id&quot;:&quot;fuea2jbha7b3ayvi&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;subscriber&quot;,&quot;title&quot;:&quot;Subscriber&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Subscribers&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/subscriber/index.xml&quot;},&quot;listen&quot;:{&quot;subscriber&quot;:{&quot;type&quot;:&quot;message&quot;,&quot;description&quot;:&quot;UsedtolistentoAnymessageoftypeaddress&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;Subscriber&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}]},&quot;anon&quot;:{}}}],&quot;identityServerUrl&quot;:&quot;&quot;,&quot;accessTokenUrl&quot;:&quot;&quot;,&quot;apiKey&quot;:&quot;&quot;,&quot;apiSecret&quot;:&quot;&quot;,&quot;theme&quot;:&quot;&quot;,&quot;isUserCustom&quot;:false,&quot;isEditorEnable&quot;:true,&quot;banner&quot;:{&quot;globalBannerExists&quot;:false,&quot;customBannerExists&quot;:false},&quot;landing&quot;:&quot;landing&quot;,&quot;isanon&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/t/${domain}/apis/dashboards/${dashboard}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">32.4</stringProp>
              <stringProp name="ConstantTimer.delay">64.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/t/${domain}/apis/dashboards/${dashboard}${id}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:&quot;${dashboard}${id}&quot;,&quot;title&quot;:&quot;${dashboard}${id}&quot;,&quot;description&quot;:&quot;testdescription&quot;,&quot;permissions&quot;:{&quot;viewers&quot;:[&quot;Internal/everyone&quot;],&quot;editors&quot;:[&quot;Internal/everyone&quot;]},&quot;pages&quot;:[{&quot;id&quot;:&quot;landing&quot;,&quot;title&quot;:&quot;Home&quot;,&quot;layout&quot;:{&quot;content&quot;:{&quot;loggedIn&quot;:{&quot;blocks&quot;:[{&quot;id&quot;:&quot;a&quot;,&quot;x&quot;:0,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;b&quot;,&quot;x&quot;:4,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;c&quot;,&quot;x&quot;:8,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;d&quot;,&quot;x&quot;:0,&quot;y&quot;:3,&quot;width&quot;:8,&quot;height&quot;:3},{&quot;id&quot;:&quot;e&quot;,&quot;x&quot;:8,&quot;y&quot;:3,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;f&quot;,&quot;x&quot;:0,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;g&quot;,&quot;x&quot;:4,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;h&quot;,&quot;x&quot;:8,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3}]}},&quot;fluidLayout&quot;:false},&quot;isanon&quot;:false,&quot;content&quot;:{&quot;default&quot;:{&quot;a&quot;:[{&quot;id&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-map&quot;,&quot;title&quot;:&quot;USAMap&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-map/index.png&quot;,&quot;settings&quot;:{&quot;personalize&quot;:true},&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-map/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewandselectUSstates&quot;,&quot;notify&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;},&quot;cancel&quot;:{&quot;type&quot;:&quot;boolean&quot;,&quot;description&quot;:&quot;Thisnotifiescancellationofstateselection&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;USAMap&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}},&quot;hasCustomUserPrefView&quot;:true,&quot;hasCustomFullView&quot;:true}],&quot;b&quot;:[{&quot;id&quot;:&quot;8k7lqtf6vulhm2t9&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-business-revenue&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-business-revenue/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewrevenuebycompaniesinUS&quot;,&quot;listen&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Usedtofilterbasedonstate&quot;,&quot;on&quot;:[{&quot;from&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;event&quot;:&quot;state&quot;}]}},&quot;styles&quot;:{&quot;no_heading&quot;:false,&quot;titlePosition&quot;:&quot;left&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;},&quot;options&quot;:{&quot;gadget-status&quot;:{&quot;type&quot;:&quot;HIDDEN&quot;,&quot;title&quot;:&quot;gadget-status&quot;,&quot;value&quot;:&quot;not-wired&quot;,&quot;options&quot;:[],&quot;required&quot;:false}},&quot;locale_titles&quot;:{&quot;en-US&quot;:&quot;USABusinessRevenue&quot;},&quot;settings&quot;:{}}}],&quot;c&quot;:[{&quot;id&quot;:&quot;0y2wiaxjh908jjor&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;date-range-picker&quot;,&quot;title&quot;:&quot;DateRangePicker&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;store://gadget/date-range-picker/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/date-range-picker/index.xml&quot;},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;DateRangePicker&quot;},&quot;notify&quot;:{&quot;range-selected&quot;:{&quot;type&quot;:&quot;date-range&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;}},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}],&quot;d&quot;:[{&quot;id&quot;:&quot;bt8gwa9q0u1eb3xr&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;publisher&quot;,&quot;title&quot;:&quot;Publisher&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;category&quot;:&quot;Publishers&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/publisher/index.xml&quot;},&quot;notify&quot;:{&quot;publisher&quot;:{&quot;type&quot;:&quot;message&quot;,&quot;description&quot;:&quot;Thisnotifiesmessagegeneratedinpublisher&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;Publisher&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}],&quot;e&quot;:[{&quot;id&quot;:&quot;fuea2jbha7b3ayvi&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;subscriber&quot;,&quot;title&quot;:&quot;Subscriber&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Subscribers&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/subscriber/index.xml&quot;},&quot;listen&quot;:{&quot;subscriber&quot;:{&quot;type&quot;:&quot;message&quot;,&quot;description&quot;:&quot;UsedtolistentoAnymessageoftypeaddress&quot;,&quot;on&quot;:[{&quot;from&quot;:&quot;bt8gwa9q0u1eb3xr&quot;,&quot;event&quot;:&quot;publisher&quot;}]}},&quot;styles&quot;:{&quot;no_heading&quot;:false,&quot;titlePosition&quot;:&quot;left&quot;,&quot;title&quot;:&quot;Subscriber&quot;},&quot;options&quot;:{},&quot;locale_titles&quot;:{&quot;en-US&quot;:&quot;Subscriber&quot;},&quot;settings&quot;:{}}}]},&quot;anon&quot;:{}}}],&quot;identityServerUrl&quot;:&quot;&quot;,&quot;accessTokenUrl&quot;:&quot;&quot;,&quot;apiKey&quot;:&quot;&quot;,&quot;apiSecret&quot;:&quot;&quot;,&quot;theme&quot;:&quot;&quot;,&quot;isUserCustom&quot;:false,&quot;isEditorEnable&quot;:true,&quot;banner&quot;:{&quot;globalBannerExists&quot;:false,&quot;customBannerExists&quot;:false},&quot;landing&quot;:&quot;landing&quot;,&quot;isanon&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/t/${domain}/apis/dashboards/${dashboard}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">2845.6000000000004</stringProp>
              <stringProp name="ConstantTimer.delay">5691.200000000001</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://${hostname}:${port}/portal/store/${domain}/gadget/textbox/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">5206.0</stringProp>
              <stringProp name="ConstantTimer.delay">10412.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/t/${domain}/apis/dashboards/${dashboard}${id}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:&quot;${dashboard}${id}&quot;,&quot;title&quot;:&quot;${dashboard}${id}&quot;,&quot;description&quot;:&quot;testdescription&quot;,&quot;permissions&quot;:{&quot;viewers&quot;:[&quot;Internal/everyone&quot;],&quot;editors&quot;:[&quot;Internal/everyone&quot;]},&quot;pages&quot;:[{&quot;id&quot;:&quot;landing&quot;,&quot;title&quot;:&quot;Home&quot;,&quot;layout&quot;:{&quot;content&quot;:{&quot;loggedIn&quot;:{&quot;blocks&quot;:[{&quot;id&quot;:&quot;a&quot;,&quot;x&quot;:0,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;b&quot;,&quot;x&quot;:4,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;c&quot;,&quot;x&quot;:8,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;d&quot;,&quot;x&quot;:0,&quot;y&quot;:3,&quot;width&quot;:8,&quot;height&quot;:3},{&quot;id&quot;:&quot;e&quot;,&quot;x&quot;:8,&quot;y&quot;:3,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;f&quot;,&quot;x&quot;:0,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;g&quot;,&quot;x&quot;:4,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;h&quot;,&quot;x&quot;:8,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3}]}},&quot;fluidLayout&quot;:false},&quot;isanon&quot;:false,&quot;content&quot;:{&quot;default&quot;:{&quot;a&quot;:[{&quot;id&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-map&quot;,&quot;title&quot;:&quot;USAMap&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-map/index.png&quot;,&quot;settings&quot;:{&quot;personalize&quot;:true},&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-map/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewandselectUSstates&quot;,&quot;notify&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;},&quot;cancel&quot;:{&quot;type&quot;:&quot;boolean&quot;,&quot;description&quot;:&quot;Thisnotifiescancellationofstateselection&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;USAMap&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}},&quot;hasCustomUserPrefView&quot;:true,&quot;hasCustomFullView&quot;:true}],&quot;b&quot;:[{&quot;id&quot;:&quot;8k7lqtf6vulhm2t9&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-business-revenue&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-business-revenue/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewrevenuebycompaniesinUS&quot;,&quot;listen&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Usedtofilterbasedonstate&quot;,&quot;on&quot;:[{&quot;from&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;event&quot;:&quot;state&quot;}]}},&quot;styles&quot;:{&quot;no_heading&quot;:false,&quot;titlePosition&quot;:&quot;left&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;},&quot;options&quot;:{&quot;gadget-status&quot;:{&quot;type&quot;:&quot;HIDDEN&quot;,&quot;title&quot;:&quot;gadget-status&quot;,&quot;value&quot;:&quot;not-wired&quot;,&quot;options&quot;:[],&quot;required&quot;:false}},&quot;locale_titles&quot;:{&quot;en-US&quot;:&quot;USABusinessRevenue&quot;},&quot;settings&quot;:{}}}],&quot;c&quot;:[{&quot;id&quot;:&quot;0y2wiaxjh908jjor&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;date-range-picker&quot;,&quot;title&quot;:&quot;DateRangePicker&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;store://gadget/date-range-picker/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/date-range-picker/index.xml&quot;},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;DateRangePicker&quot;},&quot;notify&quot;:{&quot;range-selected&quot;:{&quot;type&quot;:&quot;date-range&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;}},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}],&quot;d&quot;:[{&quot;id&quot;:&quot;bt8gwa9q0u1eb3xr&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;publisher&quot;,&quot;title&quot;:&quot;Publisher&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;category&quot;:&quot;Publishers&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/publisher/index.xml&quot;},&quot;notify&quot;:{&quot;publisher&quot;:{&quot;type&quot;:&quot;message&quot;,&quot;description&quot;:&quot;Thisnotifiesmessagegeneratedinpublisher&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;Publisher&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}],&quot;e&quot;:[{&quot;id&quot;:&quot;fuea2jbha7b3ayvi&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;subscriber&quot;,&quot;title&quot;:&quot;Subscriber&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Subscribers&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/subscriber/index.xml&quot;},&quot;listen&quot;:{&quot;subscriber&quot;:{&quot;type&quot;:&quot;message&quot;,&quot;description&quot;:&quot;UsedtolistentoAnymessageoftypeaddress&quot;,&quot;on&quot;:[{&quot;from&quot;:&quot;bt8gwa9q0u1eb3xr&quot;,&quot;event&quot;:&quot;publisher&quot;}]}},&quot;styles&quot;:{&quot;no_heading&quot;:false,&quot;titlePosition&quot;:&quot;left&quot;,&quot;title&quot;:&quot;Subscriber&quot;},&quot;options&quot;:{},&quot;locale_titles&quot;:{&quot;en-US&quot;:&quot;Subscriber&quot;},&quot;settings&quot;:{}}}],&quot;f&quot;:[{&quot;id&quot;:&quot;hv358xwnn2gtx1or&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;textbox&quot;,&quot;title&quot;:&quot;TextBox&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;store://gadget/textbox/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/textbox/index.xml&quot;},&quot;options&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Content&quot;,&quot;value&quot;:&quot;Loremipsumdolorsitamet,consecteturadipiscingelit,seddoeiusmodtemporincididuntutlaboreetdoloremagnaaliqua.&quot;,&quot;options&quot;:[],&quot;required&quot;:false}},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;TextBox&quot;},&quot;locale_titles&quot;:{}}}]},&quot;anon&quot;:{}}}],&quot;identityServerUrl&quot;:&quot;&quot;,&quot;accessTokenUrl&quot;:&quot;&quot;,&quot;apiKey&quot;:&quot;&quot;,&quot;apiSecret&quot;:&quot;&quot;,&quot;theme&quot;:&quot;&quot;,&quot;isUserCustom&quot;:false,&quot;isEditorEnable&quot;:true,&quot;banner&quot;:{&quot;globalBannerExists&quot;:false,&quot;customBannerExists&quot;:false},&quot;landing&quot;:&quot;landing&quot;,&quot;isanon&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/t/${domain}/apis/dashboards/${dashboard}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">34.4</stringProp>
              <stringProp name="ConstantTimer.delay">68.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://${hostname}:${port}/portal/store/${domain}/gadget/date-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">1021.6</stringProp>
              <stringProp name="ConstantTimer.delay">2043.2</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/t/${domain}/apis/dashboards/${dashboard}${id}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:&quot;${dashboard}${id}&quot;,&quot;title&quot;:&quot;${dashboard}${id}&quot;,&quot;description&quot;:&quot;testdescription&quot;,&quot;permissions&quot;:{&quot;viewers&quot;:[&quot;Internal/everyone&quot;],&quot;editors&quot;:[&quot;Internal/everyone&quot;]},&quot;pages&quot;:[{&quot;id&quot;:&quot;landing&quot;,&quot;title&quot;:&quot;Home&quot;,&quot;layout&quot;:{&quot;content&quot;:{&quot;loggedIn&quot;:{&quot;blocks&quot;:[{&quot;id&quot;:&quot;a&quot;,&quot;x&quot;:0,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;b&quot;,&quot;x&quot;:4,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;c&quot;,&quot;x&quot;:8,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;d&quot;,&quot;x&quot;:0,&quot;y&quot;:3,&quot;width&quot;:8,&quot;height&quot;:3},{&quot;id&quot;:&quot;e&quot;,&quot;x&quot;:8,&quot;y&quot;:3,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;f&quot;,&quot;x&quot;:0,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;g&quot;,&quot;x&quot;:4,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;h&quot;,&quot;x&quot;:8,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3}]}},&quot;fluidLayout&quot;:false},&quot;isanon&quot;:false,&quot;content&quot;:{&quot;default&quot;:{&quot;a&quot;:[{&quot;id&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-map&quot;,&quot;title&quot;:&quot;USAMap&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-map/index.png&quot;,&quot;settings&quot;:{&quot;personalize&quot;:true},&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-map/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewandselectUSstates&quot;,&quot;notify&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;},&quot;cancel&quot;:{&quot;type&quot;:&quot;boolean&quot;,&quot;description&quot;:&quot;Thisnotifiescancellationofstateselection&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;USAMap&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}},&quot;hasCustomUserPrefView&quot;:true,&quot;hasCustomFullView&quot;:true}],&quot;b&quot;:[{&quot;id&quot;:&quot;8k7lqtf6vulhm2t9&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-business-revenue&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-business-revenue/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewrevenuebycompaniesinUS&quot;,&quot;listen&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Usedtofilterbasedonstate&quot;,&quot;on&quot;:[{&quot;from&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;event&quot;:&quot;state&quot;}]}},&quot;styles&quot;:{&quot;no_heading&quot;:false,&quot;titlePosition&quot;:&quot;left&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;},&quot;options&quot;:{&quot;gadget-status&quot;:{&quot;type&quot;:&quot;HIDDEN&quot;,&quot;title&quot;:&quot;gadget-status&quot;,&quot;value&quot;:&quot;not-wired&quot;,&quot;options&quot;:[],&quot;required&quot;:false}},&quot;locale_titles&quot;:{&quot;en-US&quot;:&quot;USABusinessRevenue&quot;},&quot;settings&quot;:{}}}],&quot;c&quot;:[{&quot;id&quot;:&quot;0y2wiaxjh908jjor&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;date-range-picker&quot;,&quot;title&quot;:&quot;DateRangePicker&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;store://gadget/date-range-picker/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/date-range-picker/index.xml&quot;},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;DateRangePicker&quot;},&quot;notify&quot;:{&quot;range-selected&quot;:{&quot;type&quot;:&quot;date-range&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;}},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}],&quot;d&quot;:[{&quot;id&quot;:&quot;bt8gwa9q0u1eb3xr&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;publisher&quot;,&quot;title&quot;:&quot;Publisher&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;category&quot;:&quot;Publishers&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/publisher/index.xml&quot;},&quot;notify&quot;:{&quot;publisher&quot;:{&quot;type&quot;:&quot;message&quot;,&quot;description&quot;:&quot;Thisnotifiesmessagegeneratedinpublisher&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;Publisher&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}],&quot;e&quot;:[{&quot;id&quot;:&quot;fuea2jbha7b3ayvi&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;subscriber&quot;,&quot;title&quot;:&quot;Subscriber&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Subscribers&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/subscriber/index.xml&quot;},&quot;listen&quot;:{&quot;subscriber&quot;:{&quot;type&quot;:&quot;message&quot;,&quot;description&quot;:&quot;UsedtolistentoAnymessageoftypeaddress&quot;,&quot;on&quot;:[{&quot;from&quot;:&quot;bt8gwa9q0u1eb3xr&quot;,&quot;event&quot;:&quot;publisher&quot;}]}},&quot;styles&quot;:{&quot;no_heading&quot;:false,&quot;titlePosition&quot;:&quot;left&quot;,&quot;title&quot;:&quot;Subscriber&quot;},&quot;options&quot;:{},&quot;locale_titles&quot;:{&quot;en-US&quot;:&quot;Subscriber&quot;},&quot;settings&quot;:{}}}],&quot;f&quot;:[{&quot;id&quot;:&quot;hv358xwnn2gtx1or&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;textbox&quot;,&quot;title&quot;:&quot;TextBox&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;store://gadget/textbox/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/textbox/index.xml&quot;},&quot;options&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Content&quot;,&quot;value&quot;:&quot;Loremipsumdolorsitamet,consecteturadipiscingelit,seddoeiusmodtemporincididuntutlaboreetdoloremagnaaliqua.&quot;,&quot;options&quot;:[],&quot;required&quot;:false}},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;TextBox&quot;},&quot;locale_titles&quot;:{}}}],&quot;g&quot;:[{&quot;id&quot;:&quot;xjoyc266n31h5mi&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;date-picker&quot;,&quot;title&quot;:&quot;DatePicker&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;local://images/gadgetIcon.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/date-picker/index.xml&quot;},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;DatePicker&quot;},&quot;notify&quot;:{&quot;select&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;},&quot;cancel&quot;:{&quot;type&quot;:&quot;boolean&quot;,&quot;description&quot;:&quot;Thisnotifiescancellationofstateselection&quot;}},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}]},&quot;anon&quot;:{}}}],&quot;identityServerUrl&quot;:&quot;&quot;,&quot;accessTokenUrl&quot;:&quot;&quot;,&quot;apiKey&quot;:&quot;&quot;,&quot;apiSecret&quot;:&quot;&quot;,&quot;theme&quot;:&quot;&quot;,&quot;isUserCustom&quot;:false,&quot;isEditorEnable&quot;:true,&quot;banner&quot;:{&quot;globalBannerExists&quot;:false,&quot;customBannerExists&quot;:false},&quot;landing&quot;:&quot;landing&quot;,&quot;isanon&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/t/${domain}/apis/dashboards/${dashboard}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">35.6</stringProp>
              <stringProp name="ConstantTimer.delay">71.2</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/t/${domain}/apis/dashboards/${dashboard}${id}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:&quot;${dashboard}${id}&quot;,&quot;title&quot;:&quot;${dashboard}${id}&quot;,&quot;description&quot;:&quot;testdescription&quot;,&quot;permissions&quot;:{&quot;viewers&quot;:[&quot;Internal/everyone&quot;],&quot;editors&quot;:[&quot;Internal/everyone&quot;]},&quot;pages&quot;:[{&quot;id&quot;:&quot;landing&quot;,&quot;title&quot;:&quot;Home&quot;,&quot;layout&quot;:{&quot;content&quot;:{&quot;loggedIn&quot;:{&quot;blocks&quot;:[{&quot;id&quot;:&quot;a&quot;,&quot;x&quot;:0,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;b&quot;,&quot;x&quot;:4,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;c&quot;,&quot;x&quot;:8,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;d&quot;,&quot;x&quot;:0,&quot;y&quot;:3,&quot;width&quot;:8,&quot;height&quot;:3},{&quot;id&quot;:&quot;e&quot;,&quot;x&quot;:8,&quot;y&quot;:3,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;f&quot;,&quot;x&quot;:0,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;g&quot;,&quot;x&quot;:4,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;h&quot;,&quot;x&quot;:8,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3}]},&quot;anon&quot;:{&quot;blocks&quot;:[{&quot;id&quot;:&quot;a&quot;,&quot;x&quot;:0,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;b&quot;,&quot;x&quot;:4,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;c&quot;,&quot;x&quot;:8,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;d&quot;,&quot;x&quot;:0,&quot;y&quot;:3,&quot;width&quot;:8,&quot;height&quot;:3},{&quot;id&quot;:&quot;e&quot;,&quot;x&quot;:8,&quot;y&quot;:3,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;f&quot;,&quot;x&quot;:0,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;g&quot;,&quot;x&quot;:4,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;h&quot;,&quot;x&quot;:8,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3}]}},&quot;fluidLayout&quot;:false},&quot;isanon&quot;:true,&quot;content&quot;:{&quot;default&quot;:{&quot;a&quot;:[{&quot;id&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-map&quot;,&quot;title&quot;:&quot;USAMap&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-map/index.png&quot;,&quot;settings&quot;:{&quot;personalize&quot;:true},&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-map/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewandselectUSstates&quot;,&quot;notify&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;},&quot;cancel&quot;:{&quot;type&quot;:&quot;boolean&quot;,&quot;description&quot;:&quot;Thisnotifiescancellationofstateselection&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;USAMap&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}},&quot;hasCustomUserPrefView&quot;:true,&quot;hasCustomFullView&quot;:true}],&quot;b&quot;:[{&quot;id&quot;:&quot;8k7lqtf6vulhm2t9&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-business-revenue&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-business-revenue/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewrevenuebycompaniesinUS&quot;,&quot;listen&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Usedtofilterbasedonstate&quot;,&quot;on&quot;:[{&quot;from&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;event&quot;:&quot;state&quot;}]}},&quot;styles&quot;:{&quot;no_heading&quot;:false,&quot;titlePosition&quot;:&quot;left&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;},&quot;options&quot;:{&quot;gadget-status&quot;:{&quot;type&quot;:&quot;HIDDEN&quot;,&quot;title&quot;:&quot;gadget-status&quot;,&quot;value&quot;:&quot;not-wired&quot;,&quot;options&quot;:[],&quot;required&quot;:false}},&quot;locale_titles&quot;:{&quot;en-US&quot;:&quot;USABusinessRevenue&quot;},&quot;settings&quot;:{}}}],&quot;c&quot;:[{&quot;id&quot;:&quot;0y2wiaxjh908jjor&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;date-range-picker&quot;,&quot;title&quot;:&quot;DateRangePicker&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;store://gadget/date-range-picker/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/date-range-picker/index.xml&quot;},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;DateRangePicker&quot;},&quot;notify&quot;:{&quot;range-selected&quot;:{&quot;type&quot;:&quot;date-range&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;}},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}],&quot;d&quot;:[{&quot;id&quot;:&quot;bt8gwa9q0u1eb3xr&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;publisher&quot;,&quot;title&quot;:&quot;Publisher&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;category&quot;:&quot;Publishers&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/publisher/index.xml&quot;},&quot;notify&quot;:{&quot;publisher&quot;:{&quot;type&quot;:&quot;message&quot;,&quot;description&quot;:&quot;Thisnotifiesmessagegeneratedinpublisher&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;Publisher&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}],&quot;e&quot;:[{&quot;id&quot;:&quot;fuea2jbha7b3ayvi&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;subscriber&quot;,&quot;title&quot;:&quot;Subscriber&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Subscribers&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/subscriber/index.xml&quot;},&quot;listen&quot;:{&quot;subscriber&quot;:{&quot;type&quot;:&quot;message&quot;,&quot;description&quot;:&quot;UsedtolistentoAnymessageoftypeaddress&quot;,&quot;on&quot;:[{&quot;from&quot;:&quot;bt8gwa9q0u1eb3xr&quot;,&quot;event&quot;:&quot;publisher&quot;}]}},&quot;styles&quot;:{&quot;no_heading&quot;:false,&quot;titlePosition&quot;:&quot;left&quot;,&quot;title&quot;:&quot;Subscriber&quot;},&quot;options&quot;:{},&quot;locale_titles&quot;:{&quot;en-US&quot;:&quot;Subscriber&quot;},&quot;settings&quot;:{}}}],&quot;f&quot;:[{&quot;id&quot;:&quot;hv358xwnn2gtx1or&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;textbox&quot;,&quot;title&quot;:&quot;TextBox&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;store://gadget/textbox/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/textbox/index.xml&quot;},&quot;options&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Content&quot;,&quot;value&quot;:&quot;Loremipsumdolorsitamet,consecteturadipiscingelit,seddoeiusmodtemporincididuntutlaboreetdoloremagnaaliqua.&quot;,&quot;options&quot;:[],&quot;required&quot;:false}},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;TextBox&quot;},&quot;locale_titles&quot;:{}}}],&quot;g&quot;:[{&quot;id&quot;:&quot;xjoyc266n31h5mi&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;date-picker&quot;,&quot;title&quot;:&quot;DatePicker&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;local://images/gadgetIcon.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/date-picker/index.xml&quot;},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;DatePicker&quot;},&quot;notify&quot;:{&quot;select&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;},&quot;cancel&quot;:{&quot;type&quot;:&quot;boolean&quot;,&quot;description&quot;:&quot;Thisnotifiescancellationofstateselection&quot;}},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}]},&quot;anon&quot;:{}}}],&quot;identityServerUrl&quot;:&quot;&quot;,&quot;accessTokenUrl&quot;:&quot;&quot;,&quot;apiKey&quot;:&quot;&quot;,&quot;apiSecret&quot;:&quot;&quot;,&quot;theme&quot;:&quot;&quot;,&quot;isUserCustom&quot;:false,&quot;isEditorEnable&quot;:true,&quot;banner&quot;:{&quot;globalBannerExists&quot;:false,&quot;customBannerExists&quot;:false},&quot;landing&quot;:&quot;landing&quot;,&quot;isanon&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/t/${domain}/apis/dashboards/${dashboard}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">7768.0</stringProp>
              <stringProp name="ConstantTimer.delay">15536.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/t/${domain}/apis/dashboards/${dashboard}${id}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:&quot;${dashboard}${id}&quot;,&quot;title&quot;:&quot;${dashboard}${id}&quot;,&quot;description&quot;:&quot;testdescription&quot;,&quot;permissions&quot;:{&quot;viewers&quot;:[&quot;Internal/everyone&quot;],&quot;editors&quot;:[&quot;Internal/everyone&quot;]},&quot;pages&quot;:[{&quot;id&quot;:&quot;landing&quot;,&quot;title&quot;:&quot;Home&quot;,&quot;layout&quot;:{&quot;content&quot;:{&quot;loggedIn&quot;:{&quot;blocks&quot;:[{&quot;id&quot;:&quot;a&quot;,&quot;x&quot;:0,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;b&quot;,&quot;x&quot;:4,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;c&quot;,&quot;x&quot;:8,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;d&quot;,&quot;x&quot;:0,&quot;y&quot;:3,&quot;width&quot;:8,&quot;height&quot;:3},{&quot;id&quot;:&quot;e&quot;,&quot;x&quot;:8,&quot;y&quot;:3,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;f&quot;,&quot;x&quot;:0,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;g&quot;,&quot;x&quot;:4,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;h&quot;,&quot;x&quot;:8,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3}]},&quot;anon&quot;:{&quot;blocks&quot;:[{&quot;id&quot;:&quot;a&quot;,&quot;x&quot;:0,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;b&quot;,&quot;x&quot;:4,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;c&quot;,&quot;x&quot;:8,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;d&quot;,&quot;x&quot;:0,&quot;y&quot;:3,&quot;width&quot;:8,&quot;height&quot;:3},{&quot;id&quot;:&quot;e&quot;,&quot;x&quot;:8,&quot;y&quot;:3,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;f&quot;,&quot;x&quot;:0,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;g&quot;,&quot;x&quot;:4,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;h&quot;,&quot;x&quot;:8,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3}]}},&quot;fluidLayout&quot;:false},&quot;isanon&quot;:true,&quot;content&quot;:{&quot;default&quot;:{&quot;a&quot;:[{&quot;id&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-map&quot;,&quot;title&quot;:&quot;USAMap&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-map/index.png&quot;,&quot;settings&quot;:{&quot;personalize&quot;:true},&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-map/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewandselectUSstates&quot;,&quot;notify&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;},&quot;cancel&quot;:{&quot;type&quot;:&quot;boolean&quot;,&quot;description&quot;:&quot;Thisnotifiescancellationofstateselection&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;USAMap&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}},&quot;hasCustomUserPrefView&quot;:true,&quot;hasCustomFullView&quot;:true}],&quot;b&quot;:[{&quot;id&quot;:&quot;8k7lqtf6vulhm2t9&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-business-revenue&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-business-revenue/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewrevenuebycompaniesinUS&quot;,&quot;listen&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Usedtofilterbasedonstate&quot;,&quot;on&quot;:[{&quot;from&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;event&quot;:&quot;state&quot;}]}},&quot;styles&quot;:{&quot;no_heading&quot;:false,&quot;titlePosition&quot;:&quot;left&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;},&quot;options&quot;:{&quot;gadget-status&quot;:{&quot;type&quot;:&quot;HIDDEN&quot;,&quot;title&quot;:&quot;gadget-status&quot;,&quot;value&quot;:&quot;not-wired&quot;,&quot;options&quot;:[],&quot;required&quot;:false}},&quot;locale_titles&quot;:{&quot;en-US&quot;:&quot;USABusinessRevenue&quot;},&quot;settings&quot;:{}}}],&quot;c&quot;:[{&quot;id&quot;:&quot;0y2wiaxjh908jjor&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;date-range-picker&quot;,&quot;title&quot;:&quot;DateRangePicker&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;store://gadget/date-range-picker/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/date-range-picker/index.xml&quot;},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;DateRangePicker&quot;},&quot;notify&quot;:{&quot;range-selected&quot;:{&quot;type&quot;:&quot;date-range&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;}},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}],&quot;d&quot;:[{&quot;id&quot;:&quot;bt8gwa9q0u1eb3xr&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;publisher&quot;,&quot;title&quot;:&quot;Publisher&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;category&quot;:&quot;Publishers&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/publisher/index.xml&quot;},&quot;notify&quot;:{&quot;publisher&quot;:{&quot;type&quot;:&quot;message&quot;,&quot;description&quot;:&quot;Thisnotifiesmessagegeneratedinpublisher&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;Publisher&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}],&quot;e&quot;:[{&quot;id&quot;:&quot;fuea2jbha7b3ayvi&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;subscriber&quot;,&quot;title&quot;:&quot;Subscriber&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Subscribers&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/subscriber/index.xml&quot;},&quot;listen&quot;:{&quot;subscriber&quot;:{&quot;type&quot;:&quot;message&quot;,&quot;description&quot;:&quot;UsedtolistentoAnymessageoftypeaddress&quot;,&quot;on&quot;:[{&quot;from&quot;:&quot;bt8gwa9q0u1eb3xr&quot;,&quot;event&quot;:&quot;publisher&quot;}]}},&quot;styles&quot;:{&quot;no_heading&quot;:false,&quot;titlePosition&quot;:&quot;left&quot;,&quot;title&quot;:&quot;Subscriber&quot;},&quot;options&quot;:{},&quot;locale_titles&quot;:{&quot;en-US&quot;:&quot;Subscriber&quot;},&quot;settings&quot;:{}}}],&quot;f&quot;:[{&quot;id&quot;:&quot;hv358xwnn2gtx1or&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;textbox&quot;,&quot;title&quot;:&quot;TextBox&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;store://gadget/textbox/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/textbox/index.xml&quot;},&quot;options&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Content&quot;,&quot;value&quot;:&quot;Loremipsumdolorsitamet,consecteturadipiscingelit,seddoeiusmodtemporincididuntutlaboreetdoloremagnaaliqua.&quot;,&quot;options&quot;:[],&quot;required&quot;:false}},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;TextBox&quot;},&quot;locale_titles&quot;:{}}}],&quot;g&quot;:[{&quot;id&quot;:&quot;xjoyc266n31h5mi&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;date-picker&quot;,&quot;title&quot;:&quot;DatePicker&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;local://images/gadgetIcon.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/date-picker/index.xml&quot;},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;DatePicker&quot;},&quot;notify&quot;:{&quot;select&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;},&quot;cancel&quot;:{&quot;type&quot;:&quot;boolean&quot;,&quot;description&quot;:&quot;Thisnotifiescancellationofstateselection&quot;}},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}]},&quot;anon&quot;:{&quot;d&quot;:[{&quot;id&quot;:&quot;xy1a87z9ji4ibe29&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;date-range-picker&quot;,&quot;title&quot;:&quot;DateRangePicker&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;store://gadget/date-range-picker/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/date-range-picker/index.xml&quot;},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;DateRangePicker&quot;},&quot;notify&quot;:{&quot;range-selected&quot;:{&quot;type&quot;:&quot;date-range&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;}},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}]}}}],&quot;identityServerUrl&quot;:&quot;&quot;,&quot;accessTokenUrl&quot;:&quot;&quot;,&quot;apiKey&quot;:&quot;&quot;,&quot;apiSecret&quot;:&quot;&quot;,&quot;theme&quot;:&quot;&quot;,&quot;isUserCustom&quot;:false,&quot;isEditorEnable&quot;:true,&quot;banner&quot;:{&quot;globalBannerExists&quot;:false,&quot;customBannerExists&quot;:false},&quot;landing&quot;:&quot;landing&quot;,&quot;isanon&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/t/${domain}/apis/dashboards/${dashboard}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">4022.8</stringProp>
              <stringProp name="ConstantTimer.delay">8045.6</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/t/${domain}/apis/dashboards/${dashboard}${id}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:&quot;${dashboard}${id}&quot;,&quot;title&quot;:&quot;${dashboard}${id}&quot;,&quot;description&quot;:&quot;testdescription&quot;,&quot;permissions&quot;:{&quot;viewers&quot;:[&quot;Internal/everyone&quot;],&quot;editors&quot;:[&quot;Internal/everyone&quot;]},&quot;pages&quot;:[{&quot;id&quot;:&quot;landing&quot;,&quot;title&quot;:&quot;Home&quot;,&quot;layout&quot;:{&quot;content&quot;:{&quot;loggedIn&quot;:{&quot;blocks&quot;:[{&quot;id&quot;:&quot;a&quot;,&quot;x&quot;:0,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;b&quot;,&quot;x&quot;:4,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;c&quot;,&quot;x&quot;:8,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;d&quot;,&quot;x&quot;:0,&quot;y&quot;:3,&quot;width&quot;:8,&quot;height&quot;:3},{&quot;id&quot;:&quot;e&quot;,&quot;x&quot;:8,&quot;y&quot;:3,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;f&quot;,&quot;x&quot;:0,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;g&quot;,&quot;x&quot;:4,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;h&quot;,&quot;x&quot;:8,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3}]},&quot;anon&quot;:{&quot;blocks&quot;:[{&quot;id&quot;:&quot;a&quot;,&quot;x&quot;:0,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;b&quot;,&quot;x&quot;:4,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;c&quot;,&quot;x&quot;:8,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;d&quot;,&quot;x&quot;:0,&quot;y&quot;:3,&quot;width&quot;:8,&quot;height&quot;:3},{&quot;id&quot;:&quot;e&quot;,&quot;x&quot;:8,&quot;y&quot;:3,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;f&quot;,&quot;x&quot;:0,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;g&quot;,&quot;x&quot;:4,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;h&quot;,&quot;x&quot;:8,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3}]}},&quot;fluidLayout&quot;:false},&quot;isanon&quot;:true,&quot;content&quot;:{&quot;default&quot;:{&quot;a&quot;:[{&quot;id&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-map&quot;,&quot;title&quot;:&quot;USAMap&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-map/index.png&quot;,&quot;settings&quot;:{&quot;personalize&quot;:true},&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-map/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewandselectUSstates&quot;,&quot;notify&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;},&quot;cancel&quot;:{&quot;type&quot;:&quot;boolean&quot;,&quot;description&quot;:&quot;Thisnotifiescancellationofstateselection&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;USAMap&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}},&quot;hasCustomUserPrefView&quot;:true,&quot;hasCustomFullView&quot;:true}],&quot;b&quot;:[{&quot;id&quot;:&quot;8k7lqtf6vulhm2t9&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-business-revenue&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-business-revenue/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewrevenuebycompaniesinUS&quot;,&quot;listen&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Usedtofilterbasedonstate&quot;,&quot;on&quot;:[{&quot;from&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;event&quot;:&quot;state&quot;}]}},&quot;styles&quot;:{&quot;no_heading&quot;:false,&quot;titlePosition&quot;:&quot;left&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;},&quot;options&quot;:{&quot;gadget-status&quot;:{&quot;type&quot;:&quot;HIDDEN&quot;,&quot;title&quot;:&quot;gadget-status&quot;,&quot;value&quot;:&quot;not-wired&quot;,&quot;options&quot;:[],&quot;required&quot;:false}},&quot;locale_titles&quot;:{&quot;en-US&quot;:&quot;USABusinessRevenue&quot;},&quot;settings&quot;:{}}}],&quot;c&quot;:[{&quot;id&quot;:&quot;0y2wiaxjh908jjor&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;date-range-picker&quot;,&quot;title&quot;:&quot;DateRangePicker&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;store://gadget/date-range-picker/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/date-range-picker/index.xml&quot;},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;DateRangePicker&quot;},&quot;notify&quot;:{&quot;range-selected&quot;:{&quot;type&quot;:&quot;date-range&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;}},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}],&quot;d&quot;:[{&quot;id&quot;:&quot;bt8gwa9q0u1eb3xr&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;publisher&quot;,&quot;title&quot;:&quot;Publisher&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;category&quot;:&quot;Publishers&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/publisher/index.xml&quot;},&quot;notify&quot;:{&quot;publisher&quot;:{&quot;type&quot;:&quot;message&quot;,&quot;description&quot;:&quot;Thisnotifiesmessagegeneratedinpublisher&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;Publisher&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}],&quot;e&quot;:[{&quot;id&quot;:&quot;fuea2jbha7b3ayvi&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;subscriber&quot;,&quot;title&quot;:&quot;Subscriber&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Subscribers&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/subscriber/index.xml&quot;},&quot;listen&quot;:{&quot;subscriber&quot;:{&quot;type&quot;:&quot;message&quot;,&quot;description&quot;:&quot;UsedtolistentoAnymessageoftypeaddress&quot;,&quot;on&quot;:[{&quot;from&quot;:&quot;bt8gwa9q0u1eb3xr&quot;,&quot;event&quot;:&quot;publisher&quot;}]}},&quot;styles&quot;:{&quot;no_heading&quot;:false,&quot;titlePosition&quot;:&quot;left&quot;,&quot;title&quot;:&quot;Subscriber&quot;},&quot;options&quot;:{},&quot;locale_titles&quot;:{&quot;en-US&quot;:&quot;Subscriber&quot;},&quot;settings&quot;:{}}}],&quot;f&quot;:[{&quot;id&quot;:&quot;hv358xwnn2gtx1or&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;textbox&quot;,&quot;title&quot;:&quot;TextBox&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;store://gadget/textbox/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/textbox/index.xml&quot;},&quot;options&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Content&quot;,&quot;value&quot;:&quot;Loremipsumdolorsitamet,consecteturadipiscingelit,seddoeiusmodtemporincididuntutlaboreetdoloremagnaaliqua.&quot;,&quot;options&quot;:[],&quot;required&quot;:false}},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;TextBox&quot;},&quot;locale_titles&quot;:{}}}],&quot;g&quot;:[{&quot;id&quot;:&quot;xjoyc266n31h5mi&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;date-picker&quot;,&quot;title&quot;:&quot;DatePicker&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;local://images/gadgetIcon.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/date-picker/index.xml&quot;},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;DatePicker&quot;},&quot;notify&quot;:{&quot;select&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;},&quot;cancel&quot;:{&quot;type&quot;:&quot;boolean&quot;,&quot;description&quot;:&quot;Thisnotifiescancellationofstateselection&quot;}},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}]},&quot;anon&quot;:{&quot;d&quot;:[{&quot;id&quot;:&quot;xy1a87z9ji4ibe29&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;date-range-picker&quot;,&quot;title&quot;:&quot;DateRangePicker&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;store://gadget/date-range-picker/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/date-range-picker/index.xml&quot;},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;DateRangePicker&quot;},&quot;notify&quot;:{&quot;range-selected&quot;:{&quot;type&quot;:&quot;date-range&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;}},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}],&quot;a&quot;:[{&quot;id&quot;:&quot;rad3qcval7kfbt9&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-map&quot;,&quot;title&quot;:&quot;USAMap&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-map/index.png&quot;,&quot;settings&quot;:{&quot;personalize&quot;:true},&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-map/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewandselectUSstates&quot;,&quot;notify&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;},&quot;cancel&quot;:{&quot;type&quot;:&quot;boolean&quot;,&quot;description&quot;:&quot;Thisnotifiescancellationofstateselection&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;USAMap&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}]}}}],&quot;identityServerUrl&quot;:&quot;&quot;,&quot;accessTokenUrl&quot;:&quot;&quot;,&quot;apiKey&quot;:&quot;&quot;,&quot;apiSecret&quot;:&quot;&quot;,&quot;theme&quot;:&quot;&quot;,&quot;isUserCustom&quot;:false,&quot;isEditorEnable&quot;:true,&quot;banner&quot;:{&quot;globalBannerExists&quot;:false,&quot;customBannerExists&quot;:false},&quot;landing&quot;:&quot;landing&quot;,&quot;isanon&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/t/${domain}/apis/dashboards/${dashboard}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">2196.0</stringProp>
              <stringProp name="ConstantTimer.delay">4392.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://${hostname}:${port}/portal/store/${domain}/gadget/usa-social/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">1114.4</stringProp>
              <stringProp name="ConstantTimer.delay">2228.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/t/${domain}/apis/dashboards/${dashboard}${id}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:&quot;${dashboard}${id}&quot;,&quot;title&quot;:&quot;${dashboard}${id}&quot;,&quot;description&quot;:&quot;testdescription&quot;,&quot;permissions&quot;:{&quot;viewers&quot;:[&quot;Internal/everyone&quot;],&quot;editors&quot;:[&quot;Internal/everyone&quot;]},&quot;pages&quot;:[{&quot;id&quot;:&quot;landing&quot;,&quot;title&quot;:&quot;Home&quot;,&quot;layout&quot;:{&quot;content&quot;:{&quot;loggedIn&quot;:{&quot;blocks&quot;:[{&quot;id&quot;:&quot;a&quot;,&quot;x&quot;:0,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;b&quot;,&quot;x&quot;:4,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;c&quot;,&quot;x&quot;:8,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;d&quot;,&quot;x&quot;:0,&quot;y&quot;:3,&quot;width&quot;:8,&quot;height&quot;:3},{&quot;id&quot;:&quot;e&quot;,&quot;x&quot;:8,&quot;y&quot;:3,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;f&quot;,&quot;x&quot;:0,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;g&quot;,&quot;x&quot;:4,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;h&quot;,&quot;x&quot;:8,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3}]},&quot;anon&quot;:{&quot;blocks&quot;:[{&quot;id&quot;:&quot;a&quot;,&quot;x&quot;:0,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;b&quot;,&quot;x&quot;:4,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;c&quot;,&quot;x&quot;:8,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;d&quot;,&quot;x&quot;:0,&quot;y&quot;:3,&quot;width&quot;:8,&quot;height&quot;:3},{&quot;id&quot;:&quot;e&quot;,&quot;x&quot;:8,&quot;y&quot;:3,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;f&quot;,&quot;x&quot;:0,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;g&quot;,&quot;x&quot;:4,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;h&quot;,&quot;x&quot;:8,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3}]}},&quot;fluidLayout&quot;:false},&quot;isanon&quot;:true,&quot;content&quot;:{&quot;default&quot;:{&quot;a&quot;:[{&quot;id&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-map&quot;,&quot;title&quot;:&quot;USAMap&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-map/index.png&quot;,&quot;settings&quot;:{&quot;personalize&quot;:true},&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-map/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewandselectUSstates&quot;,&quot;notify&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;},&quot;cancel&quot;:{&quot;type&quot;:&quot;boolean&quot;,&quot;description&quot;:&quot;Thisnotifiescancellationofstateselection&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;USAMap&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}},&quot;hasCustomUserPrefView&quot;:true,&quot;hasCustomFullView&quot;:true}],&quot;b&quot;:[{&quot;id&quot;:&quot;8k7lqtf6vulhm2t9&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-business-revenue&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-business-revenue/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewrevenuebycompaniesinUS&quot;,&quot;listen&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Usedtofilterbasedonstate&quot;,&quot;on&quot;:[{&quot;from&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;event&quot;:&quot;state&quot;}]}},&quot;styles&quot;:{&quot;no_heading&quot;:false,&quot;titlePosition&quot;:&quot;left&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;},&quot;options&quot;:{&quot;gadget-status&quot;:{&quot;type&quot;:&quot;HIDDEN&quot;,&quot;title&quot;:&quot;gadget-status&quot;,&quot;value&quot;:&quot;not-wired&quot;,&quot;options&quot;:[],&quot;required&quot;:false}},&quot;locale_titles&quot;:{&quot;en-US&quot;:&quot;USABusinessRevenue&quot;},&quot;settings&quot;:{}}}],&quot;c&quot;:[{&quot;id&quot;:&quot;0y2wiaxjh908jjor&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;date-range-picker&quot;,&quot;title&quot;:&quot;DateRangePicker&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;store://gadget/date-range-picker/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/date-range-picker/index.xml&quot;},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;DateRangePicker&quot;},&quot;notify&quot;:{&quot;range-selected&quot;:{&quot;type&quot;:&quot;date-range&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;}},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}],&quot;d&quot;:[{&quot;id&quot;:&quot;bt8gwa9q0u1eb3xr&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;publisher&quot;,&quot;title&quot;:&quot;Publisher&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;category&quot;:&quot;Publishers&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/publisher/index.xml&quot;},&quot;notify&quot;:{&quot;publisher&quot;:{&quot;type&quot;:&quot;message&quot;,&quot;description&quot;:&quot;Thisnotifiesmessagegeneratedinpublisher&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;Publisher&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}],&quot;e&quot;:[{&quot;id&quot;:&quot;fuea2jbha7b3ayvi&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;subscriber&quot;,&quot;title&quot;:&quot;Subscriber&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Subscribers&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/subscriber/index.xml&quot;},&quot;listen&quot;:{&quot;subscriber&quot;:{&quot;type&quot;:&quot;message&quot;,&quot;description&quot;:&quot;UsedtolistentoAnymessageoftypeaddress&quot;,&quot;on&quot;:[{&quot;from&quot;:&quot;bt8gwa9q0u1eb3xr&quot;,&quot;event&quot;:&quot;publisher&quot;}]}},&quot;styles&quot;:{&quot;no_heading&quot;:false,&quot;titlePosition&quot;:&quot;left&quot;,&quot;title&quot;:&quot;Subscriber&quot;},&quot;options&quot;:{},&quot;locale_titles&quot;:{&quot;en-US&quot;:&quot;Subscriber&quot;},&quot;settings&quot;:{}}}],&quot;f&quot;:[{&quot;id&quot;:&quot;hv358xwnn2gtx1or&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;textbox&quot;,&quot;title&quot;:&quot;TextBox&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;store://gadget/textbox/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/textbox/index.xml&quot;},&quot;options&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Content&quot;,&quot;value&quot;:&quot;Loremipsumdolorsitamet,consecteturadipiscingelit,seddoeiusmodtemporincididuntutlaboreetdoloremagnaaliqua.&quot;,&quot;options&quot;:[],&quot;required&quot;:false}},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;TextBox&quot;},&quot;locale_titles&quot;:{}}}],&quot;g&quot;:[{&quot;id&quot;:&quot;xjoyc266n31h5mi&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;date-picker&quot;,&quot;title&quot;:&quot;DatePicker&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;local://images/gadgetIcon.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/date-picker/index.xml&quot;},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;DatePicker&quot;},&quot;notify&quot;:{&quot;select&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;},&quot;cancel&quot;:{&quot;type&quot;:&quot;boolean&quot;,&quot;description&quot;:&quot;Thisnotifiescancellationofstateselection&quot;}},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}]},&quot;anon&quot;:{&quot;d&quot;:[{&quot;id&quot;:&quot;xy1a87z9ji4ibe29&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;date-range-picker&quot;,&quot;title&quot;:&quot;DateRangePicker&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;store://gadget/date-range-picker/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/date-range-picker/index.xml&quot;},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;DateRangePicker&quot;},&quot;notify&quot;:{&quot;range-selected&quot;:{&quot;type&quot;:&quot;date-range&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;}},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}],&quot;a&quot;:[{&quot;id&quot;:&quot;rad3qcval7kfbt9&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-map&quot;,&quot;title&quot;:&quot;USAMap&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-map/index.png&quot;,&quot;settings&quot;:{&quot;personalize&quot;:true},&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-map/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewandselectUSstates&quot;,&quot;notify&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;},&quot;cancel&quot;:{&quot;type&quot;:&quot;boolean&quot;,&quot;description&quot;:&quot;Thisnotifiescancellationofstateselection&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;USAMap&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}],&quot;c&quot;:[{&quot;id&quot;:&quot;qpmnb6vywv4e7b9&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-social&quot;,&quot;title&quot;:&quot;USASocialMediaUsage&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-social/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-social/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewSocialwebsitestatisticsbystate&quot;,&quot;listen&quot;:{&quot;state-selected&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;USASocialMediaUsage&quot;,&quot;borders&quot;:true},&quot;options&quot;:{&quot;gadget-status&quot;:{&quot;type&quot;:&quot;HIDDEN&quot;,&quot;title&quot;:&quot;gadget-status&quot;,&quot;value&quot;:&quot;not-wired&quot;,&quot;options&quot;:[],&quot;required&quot;:false}},&quot;locale_titles&quot;:{}}}]}}}],&quot;identityServerUrl&quot;:&quot;&quot;,&quot;accessTokenUrl&quot;:&quot;&quot;,&quot;apiKey&quot;:&quot;&quot;,&quot;apiSecret&quot;:&quot;&quot;,&quot;theme&quot;:&quot;&quot;,&quot;isUserCustom&quot;:false,&quot;isEditorEnable&quot;:true,&quot;banner&quot;:{&quot;globalBannerExists&quot;:false,&quot;customBannerExists&quot;:false},&quot;landing&quot;:&quot;landing&quot;,&quot;isanon&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/t/${domain}/apis/dashboards/${dashboard}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">33.2</stringProp>
              <stringProp name="ConstantTimer.delay">66.4</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/t/${domain}/apis/dashboards/${dashboard}${id}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot;:&quot;${dashboard}${id}&quot;,&quot;title&quot;:&quot;${dashboard}${id}&quot;,&quot;description&quot;:&quot;testdescription&quot;,&quot;permissions&quot;:{&quot;viewers&quot;:[&quot;Internal/everyone&quot;],&quot;editors&quot;:[&quot;Internal/everyone&quot;]},&quot;pages&quot;:[{&quot;id&quot;:&quot;landing&quot;,&quot;title&quot;:&quot;Home&quot;,&quot;layout&quot;:{&quot;content&quot;:{&quot;loggedIn&quot;:{&quot;blocks&quot;:[{&quot;id&quot;:&quot;a&quot;,&quot;x&quot;:0,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;b&quot;,&quot;x&quot;:4,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;c&quot;,&quot;x&quot;:8,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;d&quot;,&quot;x&quot;:0,&quot;y&quot;:3,&quot;width&quot;:8,&quot;height&quot;:3},{&quot;id&quot;:&quot;e&quot;,&quot;x&quot;:8,&quot;y&quot;:3,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;f&quot;,&quot;x&quot;:0,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;g&quot;,&quot;x&quot;:4,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;h&quot;,&quot;x&quot;:8,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3}]},&quot;anon&quot;:{&quot;blocks&quot;:[{&quot;id&quot;:&quot;a&quot;,&quot;x&quot;:0,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;b&quot;,&quot;x&quot;:4,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;c&quot;,&quot;x&quot;:8,&quot;y&quot;:0,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;d&quot;,&quot;x&quot;:0,&quot;y&quot;:3,&quot;width&quot;:8,&quot;height&quot;:3},{&quot;id&quot;:&quot;e&quot;,&quot;x&quot;:8,&quot;y&quot;:3,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;f&quot;,&quot;x&quot;:0,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;g&quot;,&quot;x&quot;:4,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3},{&quot;id&quot;:&quot;h&quot;,&quot;x&quot;:8,&quot;y&quot;:6,&quot;width&quot;:4,&quot;height&quot;:3}]}},&quot;fluidLayout&quot;:false},&quot;isanon&quot;:true,&quot;content&quot;:{&quot;default&quot;:{&quot;a&quot;:[{&quot;id&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-map&quot;,&quot;title&quot;:&quot;USAMap&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-map/index.png&quot;,&quot;settings&quot;:{&quot;personalize&quot;:true},&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-map/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewandselectUSstates&quot;,&quot;notify&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;},&quot;cancel&quot;:{&quot;type&quot;:&quot;boolean&quot;,&quot;description&quot;:&quot;Thisnotifiescancellationofstateselection&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;USAMap&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}},&quot;hasCustomUserPrefView&quot;:true,&quot;hasCustomFullView&quot;:true}],&quot;b&quot;:[{&quot;id&quot;:&quot;8k7lqtf6vulhm2t9&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-business-revenue&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-business-revenue/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewrevenuebycompaniesinUS&quot;,&quot;listen&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Usedtofilterbasedonstate&quot;,&quot;on&quot;:[{&quot;from&quot;:&quot;z55if3sa2ejc3di&quot;,&quot;event&quot;:&quot;state&quot;}]}},&quot;styles&quot;:{&quot;no_heading&quot;:false,&quot;titlePosition&quot;:&quot;left&quot;,&quot;title&quot;:&quot;USABusinessRevenue&quot;},&quot;options&quot;:{&quot;gadget-status&quot;:{&quot;type&quot;:&quot;HIDDEN&quot;,&quot;title&quot;:&quot;gadget-status&quot;,&quot;value&quot;:&quot;not-wired&quot;,&quot;options&quot;:[],&quot;required&quot;:false}},&quot;locale_titles&quot;:{&quot;en-US&quot;:&quot;USABusinessRevenue&quot;},&quot;settings&quot;:{}}}],&quot;c&quot;:[{&quot;id&quot;:&quot;0y2wiaxjh908jjor&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;date-range-picker&quot;,&quot;title&quot;:&quot;DateRangePicker&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;store://gadget/date-range-picker/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/date-range-picker/index.xml&quot;},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;DateRangePicker&quot;},&quot;notify&quot;:{&quot;range-selected&quot;:{&quot;type&quot;:&quot;date-range&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;}},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}],&quot;d&quot;:[{&quot;id&quot;:&quot;bt8gwa9q0u1eb3xr&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;publisher&quot;,&quot;title&quot;:&quot;Publisher&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;category&quot;:&quot;Publishers&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/publisher/index.xml&quot;},&quot;notify&quot;:{&quot;publisher&quot;:{&quot;type&quot;:&quot;message&quot;,&quot;description&quot;:&quot;Thisnotifiesmessagegeneratedinpublisher&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;Publisher&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}],&quot;e&quot;:[{&quot;id&quot;:&quot;fuea2jbha7b3ayvi&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;subscriber&quot;,&quot;title&quot;:&quot;Subscriber&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Subscribers&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-business-revenue/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/subscriber/index.xml&quot;},&quot;listen&quot;:{&quot;subscriber&quot;:{&quot;type&quot;:&quot;message&quot;,&quot;description&quot;:&quot;UsedtolistentoAnymessageoftypeaddress&quot;,&quot;on&quot;:[{&quot;from&quot;:&quot;bt8gwa9q0u1eb3xr&quot;,&quot;event&quot;:&quot;publisher&quot;}]}},&quot;styles&quot;:{&quot;no_heading&quot;:false,&quot;titlePosition&quot;:&quot;left&quot;,&quot;title&quot;:&quot;Subscriber&quot;},&quot;options&quot;:{},&quot;locale_titles&quot;:{&quot;en-US&quot;:&quot;Subscriber&quot;},&quot;settings&quot;:{}}}],&quot;f&quot;:[{&quot;id&quot;:&quot;hv358xwnn2gtx1or&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;textbox&quot;,&quot;title&quot;:&quot;TextBox&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;store://gadget/textbox/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/textbox/index.xml&quot;},&quot;options&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;text&quot;,&quot;title&quot;:&quot;Content&quot;,&quot;value&quot;:&quot;Loremipsumdolorsitamet,consecteturadipiscingelit,seddoeiusmodtemporincididuntutlaboreetdoloremagnaaliqua.&quot;,&quot;options&quot;:[],&quot;required&quot;:false}},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;TextBox&quot;},&quot;locale_titles&quot;:{}}}],&quot;g&quot;:[{&quot;id&quot;:&quot;xjoyc266n31h5mi&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;date-picker&quot;,&quot;title&quot;:&quot;DatePicker&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;local://images/gadgetIcon.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/date-picker/index.xml&quot;},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;DatePicker&quot;},&quot;notify&quot;:{&quot;select&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;},&quot;cancel&quot;:{&quot;type&quot;:&quot;boolean&quot;,&quot;description&quot;:&quot;Thisnotifiescancellationofstateselection&quot;}},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}]},&quot;anon&quot;:{&quot;d&quot;:[{&quot;id&quot;:&quot;xy1a87z9ji4ibe29&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;date-range-picker&quot;,&quot;title&quot;:&quot;DateRangePicker&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;category&quot;:&quot;Widgets&quot;,&quot;thumbnail&quot;:&quot;store://gadget/date-range-picker/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/date-range-picker/index.xml&quot;},&quot;styles&quot;:{&quot;borders&quot;:false,&quot;title&quot;:&quot;DateRangePicker&quot;},&quot;notify&quot;:{&quot;range-selected&quot;:{&quot;type&quot;:&quot;date-range&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;}},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}],&quot;a&quot;:[{&quot;id&quot;:&quot;rad3qcval7kfbt9&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-map&quot;,&quot;title&quot;:&quot;USAMap&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-map/index.png&quot;,&quot;settings&quot;:{&quot;personalize&quot;:true},&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-map/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewandselectUSstates&quot;,&quot;notify&quot;:{&quot;state&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;},&quot;cancel&quot;:{&quot;type&quot;:&quot;boolean&quot;,&quot;description&quot;:&quot;Thisnotifiescancellationofstateselection&quot;}},&quot;styles&quot;:{&quot;title&quot;:&quot;USAMap&quot;,&quot;borders&quot;:true},&quot;options&quot;:{},&quot;locale_titles&quot;:{}}}],&quot;c&quot;:[{&quot;id&quot;:&quot;qpmnb6vywv4e7b9&quot;,&quot;content&quot;:{&quot;id&quot;:&quot;usa-social&quot;,&quot;title&quot;:&quot;USASocialMediaUsage&quot;,&quot;type&quot;:&quot;gadget&quot;,&quot;thumbnail&quot;:&quot;store://gadget/usa-social/index.png&quot;,&quot;data&quot;:{&quot;url&quot;:&quot;store://gadget/usa-social/index.xml&quot;},&quot;description&quot;:&quot;AllowstoviewSocialwebsitestatisticsbystate&quot;,&quot;listen&quot;:{&quot;state-selected&quot;:{&quot;type&quot;:&quot;address&quot;,&quot;description&quot;:&quot;Thisnotifiesselectedstate&quot;,&quot;on&quot;:[{&quot;from&quot;:&quot;rad3qcval7kfbt9&quot;,&quot;event&quot;:&quot;state&quot;}]}},&quot;styles&quot;:{&quot;no_heading&quot;:false,&quot;titlePosition&quot;:&quot;left&quot;,&quot;title&quot;:&quot;USASocialMediaUsage&quot;},&quot;options&quot;:{&quot;gadget-status&quot;:{&quot;type&quot;:&quot;HIDDEN&quot;,&quot;title&quot;:&quot;gadget-status&quot;,&quot;value&quot;:&quot;not-wired&quot;,&quot;options&quot;:[],&quot;required&quot;:false}},&quot;locale_titles&quot;:{&quot;en-US&quot;:&quot;USASocialMediaUsage&quot;},&quot;settings&quot;:{}}}]}}}],&quot;identityServerUrl&quot;:&quot;&quot;,&quot;accessTokenUrl&quot;:&quot;&quot;,&quot;apiKey&quot;:&quot;&quot;,&quot;apiSecret&quot;:&quot;&quot;,&quot;theme&quot;:&quot;&quot;,&quot;isUserCustom&quot;:false,&quot;isEditorEnable&quot;:true,&quot;banner&quot;:{&quot;globalBannerExists&quot;:false,&quot;customBannerExists&quot;:false},&quot;landing&quot;:&quot;landing&quot;,&quot;isanon&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/t/${domain}/apis/dashboards/${dashboard}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">1170.8</stringProp>
              <stringProp name="ConstantTimer.delay">2341.6</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/portal/t/${domain}/dashboards/${dashboard}${id}/?isAnonView=true" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/t/${domain}/dashboards/${dashboard}${id}/?isAnonView=true</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">1588.8000000000002</stringProp>
              <stringProp name="ConstantTimer.delay">3177.6000000000004</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://${hostname}:${port}/portal/store/${domain}/gadget/usa-map/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test/?isAnonView=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">186.4</stringProp>
              <stringProp name="ConstantTimer.delay">372.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://${hostname}:${port}/portal/store/${domain}/gadget/usa-social/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test/?isAnonView=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">3.2</stringProp>
              <stringProp name="ConstantTimer.delay">6.4</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}/shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://${hostname}:${port}/portal/store/${domain}/gadget/date-range-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test/?isAnonView=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://${hostname}:${port}//logout" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="destination" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">/portal/t/${domain}/dashboards/${dashboard}${id}/?isAnonView=true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">destination</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/portal/logout</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)UbuntuChromium/48.0.2564.82Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dslong.wso2.com/portal/t/wso2.com/dashboards/test/?isAnonView=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">2115.2000000000003</stringProp>
              <stringProp name="ConstantTimer.delay">4230.400000000001</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
